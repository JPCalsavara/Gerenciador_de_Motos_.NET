// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuChallenge.API.Infrastructure.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MottuChallenge.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820183528_AddRentalEntity")]
    partial class AddRentalEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MottuChallenge.API.Entities.DeliveryPersonEntity", b =>
                {
                    b.Property<string>("Identifier")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CnhImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("CnhNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("CnhType")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Identifier");

                    b.HasIndex("CnhNumber")
                        .IsUnique();

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("DeliveryPeopleEntities");
                });

            modelBuilder.Entity("MottuChallenge.API.Entities.MotorcycleEntity", b =>
                {
                    b.Property<string>("Identifier")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Identifier");

                    b.HasIndex("LicensePlate")
                        .IsUnique();

                    b.ToTable("MotorcycleEntities");
                });

            modelBuilder.Entity("MottuChallenge.API.Entities.RentalEntity", b =>
                {
                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("DeliveryPersonIdentifier")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MotorcycleIdentifier")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PlanDays")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PredictedEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Identifier");

                    b.HasIndex("DeliveryPersonIdentifier");

                    b.HasIndex("MotorcycleIdentifier");

                    b.ToTable("RentalEntities");
                });

            modelBuilder.Entity("MottuChallenge.API.Entities.RentalEntity", b =>
                {
                    b.HasOne("MottuChallenge.API.Entities.DeliveryPersonEntity", "DeliveryPerson")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottuChallenge.API.Entities.MotorcycleEntity", "Motorcycle")
                        .WithMany()
                        .HasForeignKey("MotorcycleIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPerson");

                    b.Navigation("Motorcycle");
                });
#pragma warning restore 612, 618
        }
    }
}
